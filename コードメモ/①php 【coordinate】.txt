「delete_coordinate.php」
<?php
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

require_once("MYDB.php");
$pdo = db_connect();

$data = json_decode(file_get_contents('php://input'), true);
$id = $data['id'];

try {
    $pdo->beginTransaction();

    // 元の座標データを削除
    $stmt = $pdo->prepare("DELETE FROM click_coordinates WHERE id = :id");
    $stmt->bindParam(':id', $id, PDO::PARAM_INT);
    $stmt->execute();

    $pdo->commit();

    echo json_encode(["status" => "success"]);
} catch (Exception $e) {
    $pdo->rollBack();
    echo json_encode(["status" => "error", "error" => $e->getMessage()]);
}
$pdo = null;
?>


「delete_latest_click.php」
<?php
/**
 * 最新のクリック座標を削除し、そのクリック時間を返す
 */
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

require_once("MYDB.php");
$pdo = db_connect();

// JSONデータを取得
$input = file_get_contents('php://input');
$data = json_decode($input, true);

if (json_last_error() !== JSON_ERROR_NONE) {
    echo json_encode(["status" => "error", "error" => "Invalid JSON data"]);
    exit();
}

$user_id = $data['user_id'] ?? null;
$video_id = $data['video_id'] ?? null;

if ($user_id === null || $video_id === null) {
    echo json_encode(["status" => "error", "error" => "User ID or Video ID is missing"]);
    exit();
}

try {
    $stmt = $pdo->prepare("SELECT id, x_coordinate, y_coordinate, click_time FROM click_coordinates WHERE user_id = :user_id AND video_id = :video_id ORDER BY id DESC LIMIT 1");
    $stmt->bindParam(':user_id', $user_id, PDO::PARAM_INT);
    $stmt->bindParam(':video_id', $video_id, PDO::PARAM_STR);
    $stmt->execute();
    $latest_click = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($latest_click) {
        $click_time = $latest_click['click_time'];
        $x = $latest_click['x_coordinate'];
        $y = $latest_click['y_coordinate'];

        $stmt = $pdo->prepare("DELETE FROM click_coordinates WHERE id = :id");
        $stmt->bindParam(':id', $latest_click['id'], PDO::PARAM_INT);
        $stmt->execute();

        $stmt = $pdo->prepare("SELECT x_coordinate, y_coordinate, click_time FROM click_coordinates WHERE user_id = :user_id AND video_id = :video_id");
        $stmt->bindParam(':user_id', $user_id, PDO::PARAM_INT);
        $stmt->bindParam(':video_id', $video_id, PDO::PARAM_STR);
        $stmt->execute();
        $remaining_clicks = $stmt->fetchAll(PDO::FETCH_ASSOC);

        $log_message = sprintf("List of current click coordinates for User ID: %s, Video ID: %s\n", $user_id, $video_id);
        foreach ($remaining_clicks as $click) {
            $log_message .= sprintf("X: %d, Y: %d, Click Time: %f\n", $click['x_coordinate'], $click['y_coordinate'], $click['click_time']);
        }
        file_put_contents('now_clicks_log.txt', $log_message);

        echo json_encode(["status" => "success", "click_time" => $click_time, "x" => $x, "y" => $y]);
    } else {
        echo json_encode(["status" => "error", "error" => "No click coordinates found"]);
    }
} catch (Exception $e) {
    echo json_encode(["status" => "error", "error" => $e->getMessage()]);
}

// クリックカウントを1減らす
$stmt = $pdo->prepare("UPDATE click_counts SET click_count = GREATEST(click_count - 1, 0) WHERE user_id = :user_id AND video_id = :video_id");
$stmt->bindParam(':user_id', $user_id, PDO::PARAM_INT);
$stmt->bindParam(':video_id', $video_id, PDO::PARAM_STR);
$stmt->execute();


$pdo = null;
?>



「display_click_coordinates.php」
<?php
require_once("MYDB.php");
$pdo = db_connect();

try {
    $stmt = $pdo->prepare("SELECT * FROM click_coordinates");
    $stmt->execute();
    $results = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch (Exception $e) {
    echo "Error: " . $e->getMessage();
    exit();
}
?>

<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <title>Click Coordinates</title>
    <style>
        table {
            width: 800px;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
        }
        th {
            background-color: #f2f2f2;
            text-align: center;
        }
    </style>
</head>
<body>
    <h1>Click Coordinates</h1>
    <table>
        <tr>
            <th>ID</th>
            <th>User ID</th>
            <th>X Coordinate</th>
            <th>Y Coordinate</th>
            <th>Click Time</th>
            <th>Video ID</th>
            <th>Comment</th>
        </tr>
        <?php foreach ($results as $row): ?>
            <tr>
                <td><?php echo htmlspecialchars($row['id']); ?></td>
                <td><?php echo htmlspecialchars($row['user_id']); ?></td>
                <td><?php echo htmlspecialchars($row['x_coordinate']); ?></td>
                <td><?php echo htmlspecialchars($row['y_coordinate']); ?></td>
                <td><?php echo htmlspecialchars($row['click_time']); ?></td>
                <td><?php echo htmlspecialchars($row['video_id']); ?></td>
                <td><?php echo htmlspecialchars($row['comment']); ?></td>
            </tr>
        <?php endforeach; ?>
    </table>
</body>
</html>


「fetch_click_coordinates.php」
<?php
require_once("MYDB.php");
$pdo = db_connect();

header('Content-Type: application/json');

try {
    $stmt = $pdo->prepare("SELECT * FROM click_coordinates");
    $stmt->execute();
    $results = $stmt->fetchAll(PDO::FETCH_ASSOC);
    echo json_encode(['status' => 'success', 'data' => $results]);
} catch (Exception $e) {
    echo json_encode(['status' => 'error', 'message' => $e->getMessage()]);
}
?>




「get_click_count.php」
<?php
require_once(__DIR__ . "/MYDB.php");

header('Content-Type: application/json');

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $input = json_decode(file_get_contents('php://input'), true);
    $user_id = $input['user_id'];
    $video_id = $input['video_id'];

    try {
        $pdo = db_connect();
        $stmt = $pdo->prepare("SELECT click_count FROM click_counts WHERE user_id = :user_id AND video_id = :video_id");
        $stmt->bindValue(':user_id', $user_id, PDO::PARAM_INT);
        $stmt->bindValue(':video_id', $video_id, PDO::PARAM_STR);
        $stmt->execute();
        $row = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($row) {
            echo json_encode(['status' => 'success', 'click_count' => $row['click_count']]);
        } else {
            echo json_encode(['status' => 'error', 'message' => 'No data found']);
        }
    } catch (PDOException $e) {
        echo json_encode(['status' => 'error', 'message' => $e->getMessage()]);
    }
} else {
    echo json_encode(['status' => 'error', 'message' => 'Invalid request method']);
}
?>


「get_click_data.php」
<?php
require 'MYDB.php';

header('Content-Type: application/json');

try {
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        $data = json_decode(file_get_contents('php://input'), true);
        if (!$data || !isset($data['video_id'])) {
            throw new Exception("Invalid input");
        }
        $video_id = $data['video_id'];
        
        $conn = connect_db();
        
        if (!$conn) {
            throw new Exception("Database connection failed: " . mysqli_connect_error());
        }
        
        $sql = "SELECT id, x_coordinate AS x, y_coordinate AS y, click_time FROM click_coordinates WHERE video_id = ?";
        $stmt = $conn->prepare($sql);
        if (!$stmt) {
            throw new Exception("Prepare statement failed: " . $conn->error);
        }
        
        $stmt->bind_param("s", $video_id);
        if (!$stmt->execute()) {
            throw new Exception("Execute failed: " . $stmt->error);
        }
        
        $result = $stmt->get_result();
        if (!$result) {
            throw new Exception("Getting result set failed: " . $stmt->error);
        }
        
        $clicks = array();
        while ($row = $result->fetch_assoc()) {
            $clicks[] = $row;
        }
        
        echo json_encode(['status' => 'success', 'clicks' => $clicks]);
        
        $stmt->close();
        $conn->close();
    } else {
        throw new Exception('Invalid request method');
    }
} catch (Exception $e) {
    echo json_encode(['status' => 'error', 'message' => $e->getMessage()]);
}


「get_latest_click.php」
<?php
require_once("MYDB.php");
$pdo = db_connect();

$data = json_decode(file_get_contents('php://input'), true);
$user_id = $data['user_id'];
$video_id = $data['video_id'];

try {
    $stmt = $pdo->prepare("SELECT id, x_coordinate, y_coordinate, click_time, comment FROM click_coordinates WHERE user_id = :user_id AND video_id = :video_id ORDER BY click_time DESC LIMIT 1");
    $stmt->bindParam(':user_id', $user_id, PDO::PARAM_INT);
    $stmt->bindParam(':video_id', $video_id, PDO::PARAM_STR);
    $stmt->execute();
    $latest_click = $stmt->fetch(PDO::FETCH_ASSOC);

    if ($latest_click) {
        echo json_encode([
            "status" => "success",
            "id" => $latest_click['id'],
            "x" => $latest_click['x_coordinate'],
            "y" => $latest_click['y_coordinate'],
            "click_time" => $latest_click['click_time'],
            "comment" => $latest_click['comment']
        ]);
    } else {
        echo json_encode(["status" => "error", "error" => "No click data found"]);
    }
} catch (Exception $e) {
    echo json_encode(["status" => "error", "error" => $e->getMessage()]);
}
$pdo = null;
?>


「get_user_id.php」
<?php
/**
 * セッションからユーザーIDを取得し、返す。
 */
    session_start();
    if (isset($_SESSION['user_id'])) {
        echo json_encode(["user_id" => $_SESSION['user_id']]);
    } else {
        echo json_encode(["user_id" => null, "status" => "error", "error" => "User ID is missing"]);
    }
?>


「MYDB.php」
<?php
/**
 * DB接続
 */
    function db_connect(){
        $db_user = "root";	// ユーザー名
        $db_pass = "satoru0411";	// パスワード
        $db_host = "localhost";	// ホスト名
        $db_name = "coordinates_db";	// データベース名
        $db_type = "mysql";	// データベースの種類
        
        $dsn = "$db_type:host=$db_host;dbname=$db_name;charset=utf8";
        
        try {
        $pdo = new PDO($dsn, $db_user, $db_pass);
        $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        $pdo->setAttribute(PDO::ATTR_EMULATE_PREPARES, false);
        } catch(PDOException $Exception) {
        die('エラー :' . $Exception->getMessage());
        }
        return $pdo;
    }
?>